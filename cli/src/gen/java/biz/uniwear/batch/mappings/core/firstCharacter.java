/**
 * core/firstCharacter.java
 *
 * This file was generated by MapForce 2019.
 *
 * YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
 * OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
 *
 * Refer to the MapForce Documentation for further details.
 * http://www.altova.com/mapforce
 */
package biz.uniwear.batch.mappings.core;
import com.altova.mapforce.*;
import com.altova.types.*;
import com.altova.xml.*;
import com.altova.db.*;
import com.altova.text.tablelike.*;
import com.altova.text.*;
import com.altova.text.edi.*;
import java.util.*;

public class firstCharacter extends com.altova.TraceProvider 
{

	
	static class main implements IEnumerable
	{
		java.lang.String var1_value;
		java.lang.String var2_default;
	
		public main(java.lang.String var1_value, java.lang.String var2_default)
		{
			this.var1_value = var1_value;
			this.var2_default = var2_default;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}
		
		public static class Enumerator implements IEnumerator
		{
			int pos = 0;
			int state = 2;
			Object current;
			main closure;
			public Enumerator(main closure) 
			{
				this.closure = closure;
			}
			
			public Object current() {return current;}
			
			public int position() {return pos;}
			
			public boolean moveNext() throws Exception
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 2:	if (moveNext_2()) return true; break;
					case 3:	if (moveNext_3()) return true; break;
 					}
				}
				return false;
			}

			private boolean moveNext_2() throws Exception {
				state = 0;				
				if (!(com.altova.functions.Core.equal(com.altova.CoreTypes.integerToDecimal(com.altova.CoreTypes.longToInteger(com.altova.CoreTypes.intToLong(com.altova.functions.Core.stringLength(closure.var1_value)))), com.altova.CoreTypes.integerToDecimal(new java.math.BigInteger("0"))))) {state = 3; return false; }
				current = closure.var2_default;
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.substring(closure.var1_value, com.altova.CoreTypes.integerToDouble(new java.math.BigInteger("1")), com.altova.CoreTypes.integerToDouble(new java.math.BigInteger("1")));
				pos++;
				return true;
			}

			
			public void close()
			{
				try
				{
				}
				catch (Exception e)
				{
				}
			}
		}
				
	}



	// instances


	public static IEnumerable create(java.lang.String var1_value, java.lang.String var2_default)
	{
		return new main(
			var1_value,
			var2_default
			);

	}
	

	public static java.lang.String eval(java.lang.String var1_value, java.lang.String var2_default) throws java.lang.Exception
	{

		com.altova.mapforce.IEnumerator e = create(var1_value,var2_default).enumerator();
		if (e.moveNext())
		{
			java.lang.String result = ((java.lang.String)e.current());
			e.close();
			return result;
		}
		e.close();
		throw new com.altova.AltovaException("Expected a function result.");		
	
	}

}
